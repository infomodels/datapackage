machine:
  services:
    - docker
  environment:
    # Make CircleCI specific environment variables more generic.
    BUILD_NUM: "${CIRCLE_BUILD_NUM}"
    COMMIT_SHA1: "${CIRCLE_SHA1}"
    BRANCH: "${CIRCLE_BRANCH}"
    APP_NAME: "${CIRCLE_PROJECT_REPONAME}"
    ARTIFACT_DIR: "${CIRCLE_ARTIFACTS}"
    TEST_OUTPUT_DIR: "${CIRCLE_TEST_REPORTS}"
    GO_SRC_PATH: "/home/ubuntu/.go_workspace/src/github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"

dependencies:
  override:
    # Install go dependencies, including those for testing.
    - make test-install
    # Install coverage, coveralls integration, and html coverage dependencies.
    - go get github.com/axw/gocov/gocov
    - go get github.com/mattn/goveralls
    - go get gopkg.in/matm/v1/gocov-html
    - go get github.com/jstemmer/go-junit-report
    # Move source code to the GOPATH.
    - mkdir -p "${GO_SRC_PATH}"
    - rsync -azC --delete ./ "${GO_SRC_PATH}/"
    # Install and build the package.
    - cd "${GO_SRC_PATH}" && go install && go build
      -ldflags "-X packer.progBuild=${COMMIT_SHA1:0:7}"
      -o /home/ubuntu/.go_workspace/bin/data-models-packer ./cmd/packer

test:
  override:
    # Create test output directory.
    - mkdir -p "${TEST_OUTPUT_DIR}/gotest"
    # Run tests outputting coverage and jUnit XML data.
    - cd "${GO_SRC_PATH}" && go test -v
      -coverprofile="${ARTIFACT_DIR}/packer.out" | go-junit-report >
      "${TEST_OUTPUT_DIR}/gotest/packer.xml"
  post:
    # Convert to gocov format.
    - gocov convert "${ARTIFACT_DIR}/packer.out" > "${ARTIFACT_DIR}/packer.json"
    # Convert to html.
    - gocov-html "${ARTIFACT_DIR}/packer.json" > "${ARTIFACT_DIR}/packer.html"
    # Submit to coveralls.
    - goveralls -gocovdata="${ARTIFACT_DIR}/packer.json" -service=circle-ci
      -repotoken="${COVERALLS_TOKEN}"
